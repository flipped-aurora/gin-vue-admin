{
    "core": {
        "server": {
            "currentVersion": "Current version",
            "welcomeTo": "Welcome to"
        },
        "viper": {
            "modeGinEnvName": "You are using the gin mode with environment name %s, the config path is %s\n",
            "envVariable": "You are using the %s environment variable, the config path is %s\n",
            "commandLineParam": "You are using the value passed by the -c command line argument, the config path is %s\n",
            "viperFunc": "You are using the value passed by the func Viper(), the config path is %s\n"
        }
    },
    "initialize": {
        "projectNotInitialized": "The project has not been initialized, plugins cannot be installed. Restart the project after initialization to complete the plugin installation.",
        "registrationStarted": "Registration started",
        "scheduledDatabaseCleanup": "Scheduled database cleanup for [logs, blacklist] content",
        "getTableObjectFailed": "Failed to get table object for [%s]!",
        "duplicateIndex": "Index [%s] is duplicated!",
        "createIndexFailed": "Failed to create index [%s]!",
        "getIndexObjectFailed": "Failed to get index object for [%s]!",
        "getIndexListFailed": "Failed to get index list for [%s]!",
        "mongoConnectionFailed": "Failed to connect to the MongoDB database!"
    },
    "general": {
        "createSuccss": "Created successfully",
        "creationFail": "Creation failed!",
        "creationFailErr": "Creation failed",
        "deletFailErr": "Delete failed",
        "deleteFail": "Deletion failed!",
        "deleteSuccess": "Deleted successfully",
        "getDataFail": "Getting data failed!",
        "getDataFailErr": "Getting data failed",
        "getDataSuccess": "Getting data successfully",
        "modifyFail": "Modification failed!",
        "modifySuccess": "Modified successfully",
        "queryFail": "Query failed!",
        "queryFailErr": "Query failed",
        "querySuccess": "Query successfully",
        "setupFail": "Setup failed",
        "setupFailErr": "Setup failed!",
        "setupSuccess": "Setup successfully",
        "tabelDataInitFail": "Table data initialization failed!",
        "updateFail": "Update failed!",
        "updateFailErr": "Update failed",
        "updateSuccess": "Updated successfully",
        "invalidPackageName": "Invalid package name",
        "insufficientPermissions": "Insufficient permissions",
        "sendFailed": "Send failed",
        "sendSuccess": "Send successful"
    },
    "init": {
        "dbAlreadyExist": "Database configuration already exists!!",
        "dbAlreadyInit": "Database already initialized!",
        "initDB": "Go to initialize the database"
    },
    "model": {
        "common": {
            "response": {
                "operationFail": "The operation fail.",
                "operationSuccess": "The operation was successful.",
                "success": "Success"
            }
        }
    },
    "sys_authority": {
        "copyFail": "Copy failed!",
        "copyFailErr": "Copy failed",
        "copySuccess": "Copy successfully",
        "assignmentFail": "Assignment failed",
        "assignmentSuccess": "Assignment successful"
    },
    "sys_auto_code": {
        "autoCreateFail": "Automatic creation failed! Please clear the junk data yourself!",
        "largeModelCreationFail": "Large model generation failed!",
        "largeModelCreationFailErr": "Large model generation failed",
        "previewFail": "Preview failed!",
        "previewFailErr": "Preview failed",
        "previewSuccess": "Previewed successfully",
        "queryTablesFail": "Failed to query tables",
        "webPluginInstallSuccess": "Web plugin installation succeeded",
        "serverPluginInstallSuccess": "Server plugin installation succeeded",
        "webPluginInstallFail": "Web plugin failed to install, please unzip and install according to the documentation. If it is a backend-only plugin, please ignore this message.",
        "serverPluginInstallFail": "Server plugin failed to install, please unzip and install according to the documentation. If it is a frontend-only plugin, please ignore this message.",
        "packagingFail": "Packaging failed",
        "createInitMenuFail": "Failed to create initial menu",
        "fileChangeSuccess": "File change succeeded",
        "createInitApiFail": "Failed to create initial API",
        "packagingSuccess": "Packaging succeeded, file path is: %s",
        "injectFail": "Injection failed",
        "injectSuccess": "Injection succeeded",
        "templateFileReadFailed": "[filepath:%s] Failed to read template file!",
        "directoryCreationFailed": "[filepath:%s] Failed to create directory!",
        "generationFailed": "[filepath:%s] Generation failed!",
        "generationSuccess": "[template:%s][filepath:%s] Generation succeeded!",
        "injection_success": "[type:%s] Injection successful!\n",
        "templateFolderReadFailed": "Failed to read template folder!",
        "illegalTemplateFile": "[filepath:%s] Illegal template file!",
        "illegalTemplateDirectory": "[filepath:%s] Illegal template directory!",
        "illegalTemplateSuffix": "[filepath:%s] Illegal template suffix!",
        "templateFolderReadFailedWithDir": "Failed to read template folder [%s]!",
        "testPackage": "Test package",
        "testPlugin": "Test plugin",
        "description": "Description",
        "displayName": "Display Name",
        "keywordNotice": "%s is a Go keyword!",

        "nonStandardPlugin": "Non-standard plugin, please migrate automatically according to the documentation",
        "autoPathExists": "autoPath already has a plugin with the same name, please install it manually",
        "duplicatePlugin": "A plugin with the same name already exists, please install it manually",
        "pluginNameRequired": "Plugin name cannot be empty",
        "webPathNotExist": "Web path does not exist",
        "serverPathNotExist": "Server path does not exist",

        "duplicateRoleId": "Duplicate role ID exists",
        "queryRoleDataFailed": "Failed to query role data",
        "roleNotExist": "This role does not exist",
        "roleInUse": "This role is currently in use by users and cannot be deleted",
        "roleHasSubRoles": "This role has sub-roles and cannot be deleted",
        "invalidRoleId": "The submitted role ID is invalid",

        "buttonInUse": "This button is currently in use and cannot be deleted",
        "menuHasSubMenu": "This menu has submenus and cannot be deleted",
        "recordNotFound": "Record does not exist",
        "menuUsedAsHome": "This menu has roles being used as the homepage and cannot be deleted",
        "duplicateNameUpdateFailed": "Update failed due to duplicate name",
        "adaptDatabaseFailed": "Database adaptation failed, please check if the casbin table is InnoDB engine!",
        "stringLoadModelFailed": "Failed to load string model",
        "noAvailableInit": "No available initialization process, please check if the initialization has been completed."
    },
    "sys_auto_code_history": {
        "rollbackSuccess": "Rolledback successfully"
    },
    "sys_captcha": {
        "vCodeFail": "Obtaining verification code failed!",
        "vCodeFailErr": "Obtaining verification code failed",
        "vCodeSuccess": "Verification code obtained successfully"
    },
    "sys_initdb": {
        "autoCreateDBFail": "Automatic database creation failed!",
        "autoCreateDBFailErr": "Automatic database creation failed, please check the background log and initialize it after checking",
        "autoCreateDBSuccess": "Automatic database created successfully",
        "paramVerifyFail": "Parameter verification failed!",
        "paramVerifyFailErr": "Parameter verification failed"
    },
    "sys_jwt_blacklist": {
        "jwtInvalidatedSuccess": "jwt was invalidated successfully",
        "jwtInvalidationFailedErr": "JWT invalidation failed"
    },
    "sys_menu": {
        "addFail": "Adding failed!",
        "addFailErr": "Adding failed",
        "addSuccess": "Added successfully"
    },
    "sys_operation_record": {
        "batchDeleteFail": "Batch delete failed!",
        "batchDeleteFailErr": "Batch delete failed",
        "batchDeleteSuccess": "Batch delete successfully"
    },
    "sys_system": {
        "rebootFail": "Failed to reboot the system!",
        "rebootFailErr": "Failed to reboot the system",
        "rebootSuccess": "Reboot the system successfully"
    },
    "sys_user": {
        "changePWErr": "The modification failed, the original password does not match the current account",
        "deleteUserFail": "Delete user failed",
        "getTokenErr": "Failed to get token",
        "getTokenFail": "Failed to get token!",
        "jwtInvalidationFailed": "JWT invalidation failed!",
        "loginFail": "Login failed! Username does not exist or password is incorrect!",
        "loginStatusFail": "Failed to set the login status!",
        "loginStatusFailErr": "Failed to set the login status",
        "loginSuccess": "Logged in successfully",
        "registrationFail": "Registration failed!",
        "registrationFailErr": "Registration failed",
        "registrationSuccess": "Registration success",
        "resetPWFail": "Reset password failed!",
        "resetPWFailErr": "Reset password failed",
        "resetPWSuccess": "Password reset successfully",
        "userNameOrPasswordError": "Username does not exist or password is incorrect",
        "vCodeErr": "Verification code error",
        "loginFailUserBanned": "Login failed! The user is banned from logging in!",
        "userBanned": "The user is banned from logging in",
        "usernameRegistered": "Username already registered",
        "passwordError": "Incorrect password",
        "originalPasswordError": "Original password is incorrect",
        "userHasNoRole": "The user does not have this role",
        "defaultRouteNotFound": "Default route not found, unable to switch to this role",
        "queryUserDataFailed": "Failed to query user data",
        "userNotExist": "User does not exist"
    },
    "system": {
        "api": {
            "desc": {
                "addMenu": "Add menu",
                "addMenuRole": "Add menu and role association",
                "addTemplateMethod": "Add template method",
                "autoCode": "Automate code",
                "batchDeleteAnnouncement": "Batch Delete Announcement",
                "batchDeleteExportTemplate": "Batch delete export template",
                "batchDeleteOperationHistory": "Batch delete operation history",
                "breakpointContinue": "Breakpoint continuation",
                "breakpointContinueFinish": "Breakpoint continuation complete",
                "changePassword": "Change password (recommended)",
                "changeRoleAPIPermission": "Change role api permissions",
                "configurationTemplates": "Configuration template",
                "confirmSyncApi": "Confirm sync API",
                "copyRole": "Copy Role",
                "createAPI": "Create API",
                "createCustomer": "Create customer",
                "createDictionary": "Create dictionary",
                "createDictionaryContent": "Create dictionary content",
                "createExportTemplate": "Create export template",
                "createOperationRecord": "Create operation record",
                "createPluginPackage": "Create plugin package",
                "createRole": "Create Role",
                "deleteAPI": "Delete APIs",
                "deleteAPIByID": "Batch Delete API",
                "deleteAnnouncement": "Delete Announcement",
                "deleteButton": "Delete button",
                "deleteCustomer": "Delete customer",
                "deleteDictionary": "Delete dictionary",
                "deleteDictionaryContent": "Delete dictionary content",
                "deleteExportTemplate": "Delete export template",
                "deleteFile": "Delete file",
                "deleteMenu": "Delete Menu",
                "deleteOperationRecord": "Delete operation record",
                "deleteRole": "Delete role",
                "deleteRollbackRecord": "Delete rollback record",
                "deleteTemplate": "Delete template",
                "deleteUsers": "Delete Users",
                "downloadTemplate": "Download template",
                "editFileNameOrRemark": "Edit file name or remark",
                "exportExcel": "Export Excel",
                "fileIntegrityCheck": "File integrity check",
                "fileUploadExample": "File upload example",
                "findTargetFile": "Find target file (second pass)",
                "getAPIByID": "Get API Details",
                "getAPIList": "Get API List",
                "getAllAPI": "Get All API",
                "getAllDatabases": "Get all databases",
                "getAllTemplates": "Get all templates",
                "getAnnouncementByID": "Get Announcements By ID",
                "getAnnouncementList": "Get Announcement List",
                "getConfigFileContent": "Get configuration file content",
                "getCustomerList": "Get customer list",
                "getDatabaseTables": "Get database tables",
                "getDictionaryById": "Get dictionary by ID",
                "getDictionaryContentById": "Get dictionary content by ID",
                "getDictionaryContentList": "Get dictionary content list",
                "getDictionaryList": "Get dictionary list",
                "getDynamicRoute": "Get user dynamic route",
                "getExistingButtonPermission": "Get existing button permission",
                "getExportTemplateById": "Get export template by ID",
                "getExportTemplateList": "Get export template list",
                "getMenuByID": "Get Menu By ID",
                "getMenuList": "Get Menu List",
                "getMenuRole": "Get the specified role menu",
                "getMenuTree": "Get the menu tree (required)",
                "getMetaInfo": "Get meta information",
                "getOperationRecordById": "Get operation record by ID",
                "getOperationRecordList": "Get operation record list",
                "getPermissionList": "Get permission list",
                "getRoleList": "Get Roles List",
                "getRouteGroup": "Get route group",
                "getSelectedTableFields": "Get all fields of the selected table",
                "getSelfInfo": "Get self information (required)",
                "getServerInfo": "Get server information",
                "getSingleCustomer": "Get single customer",
                "getSyncApi": "Get sync API",
                "getTemplateFile": "Get the template file",
                "getUploadFileList": "Get upload file list",
                "getUsersList": "Get user list",
                "ignoreApi": "Ignore API",
                "importExcel": "Import Excel",
                "installPlugin": "Install plugin",
                "jwtAddedToBlackList": "JWT added to the blacklist (Logout required)",
                "mergeFileAfterUpload": "Merge file after upload",
                "modifyUserRole": "Modify user role (required)",
                "newAnnouncement": "New Announcement",
                "packagePlugin": "Package plugin",
                "pluginVersionResumableUpload": "Plugin version resumable upload",
                "previewAutoCode": "Preview automated code",
                "queryRollbackRecord": "Query rollback record",
                "removeFileAfterUpload": "Remove file after upload",
                "resetUserPassword": "Reset User Password",
                "resetUserWeb": "User Interface Configuration",
                "rollbackAutoGeneratedCode": "Rollback auto-generated code",
                "sendEmail": "Send email",
                "sendTestEmail": "Send test email",
                "setButtonPermission": "Set button permission",
                "setConfigFileContent": "Set configuration file content",
                "setPermissionGroup": "Set permission group",
                "setRolePermissions": "Set role resource permissions",
                "setSelfInfo": "Set self information (required)",
                "setUserInfo": "Set user information",
                "updateAPI": "Update APIs",
                "updateAnnouncement": "Update Announcement",
                "updateCustomer": "Update customer",
                "updateDictionary": "Update dictionary",
                "updateDictionaryContent": "Update dictionary content",
                "updateExportTemplate": "Update export template",
                "updateMenu": "Update Menu",
                "updateRole": "Update Role",
                "userLoginRequired": "User login (required)",
                "userRegistration": "User registration",
                "tableDataInitFail": "Table data initialization failed"
            },
            "group": {
                "announcement": "Announcement",
                "api": "API",
                "buttonAuthority": "Button Authority",
                "casbin": "casbin",
                "codeGen": "Code Generator",
                "codeGenHistory": "Code generator log",
                "customer": "Customer",
                "dictDetails": "System Dictionary Details",
                "dictionary": "System dictionary",
                "email": "Email",
                "fileUploadDownload": "File upload and download",
                "menu": "Menu",
                "optRecord": "Operation record",
                "partialUpload": "Partial upload",
                "resumeUpload": "Resumable upload (plug-in version)",
                "role": "Role",
                "systemService": "System Service",
                "systemUser": "System User",
                "tableTemplate": "Table Templates",
                "templateConfiguration": "Template Configuration"
            }
        },
        "authority": {
            "normalUserSubRole": "Normal User Sub-Role",
            "normalUsers": "Normal Users",
            "permissionRefreshFailed": "Created successfully, permission refresh failed.",
            "testRole": "Test Role"
        },
        "dictionary": {
            "boolType": "Boolean Type",
            "floatType": "Float Type",
            "gender": "Gender Type",
            "genderDict": "Gender dictionary",
            "intType": "Integer Type",
            "intTypeDict": "The database type corresponding to the int type",
            "stringType": "String Type",
            "timeDateType": "Time-Date Type",
            "timeDateTypeDict": "Database Time-Date Type"
        },
        "dictionary_detail": {
            "female": "Female",
            "male": "Male"
        },
        "menu": {
            "about": "About",
            "adminTools": "Administration Tools",
            "announcementManage": "Announcement Management [Example]",
            "apiManage": "API Management",
            "autoCode": "Code Generator",
            "autoCodeEdit": "Automate code (reuse)",
            "autoCodeManage": "Automated Code Management",
            "breakPoint": "HTTP",
            "customerList": "Customer List (Resource Example)",
            "dashboard": "Dashboard",
            "dataTableInitFail": "Failed to initialize table data",
            "dictDetail": "Dictionary Details",
            "dictManage": "Dictionary Management",
            "emailPlugin": "Email Plugin",
            "examples": "Examples",
            "excelImportExport": "Excel Import And Export",
            "formCreator": "Form Builder",
            "mediaLibUpDown": "Media Library (Upload and Download)",
            "menuManage": "Menu Management",
            "operationLog": "Audit Log",
            "packagePlugin": "Package Plugin",
            "personalInfo": "Personal Information",
            "pluginInstall": "Plugin Installation",
            "pluginMarket": "Plugin Market",
            "pluginSystem": "Plugin System",
            "resumableUpload": "Resumable upload (plug-in version)",
            "resume": "Resume From a Breakpoint (plug-in version)",
            "roleManage": "Role Management",
            "serverStatus": "Server Status",
            "system": "System Configuration",
            "systemTools": "System Tools",
            "tableTemplate": "Table Template",
            "templateConfig": "Template Configuration",
            "userManage": "User Management",
            "website": "Official Website",
            "buttonKey": "Button Key",
            "buttonComment": "Button Comment",
            "menuID": "Menu ID"
        }
    },
    "announcement": {
        "publicAnnouncementAPI": "Announcement API information that does not require authentication",
        "initConfigFailed": "Failed to initialize configuration file",
        "announcementManagement": "Announcement Management",
        "registryFailed": "Registry failed"
    },
    "sys_api": {
        "syncFail": "Sync failed",
        "ignoreFail": "Ignore failed",
        "refreshFail": "Refresh failed",
        "refreshSuccess": "Refresh successful"
    },
    "api": {
        "example": {
            "exa_breakpoint_continue": {
                "fileFail": "File upload failed",
                "fileReadFail": "File read failed",
                "checkMD5Fail": "Check MD5 failed",
                "findOrCreateRecordFail": "Failed to find or create record",
                "resumeFromBreakpointFail": "Resume from breakpoint failed",
                "createFileRecordFail": "Failed to create file record",
                "sliceCreationSuccess": "Slice creation succeeded",
                "searchFail": "Search failed",
                "searchSuccess": "Search succeeded",
                "fileCreationFail": "File creation failed",
                "fileCreationSuccess": "File creation succeeded",
                "cacheSliceDeleteFail": "Failed to delete cache slice",
                "cacheSliceDeleteSuccess": "Cache slice deletion succeeded"
            }
        }
    },
    "service": {
        "duplicateApi": "Duplicate API exists",
        "invalidSortField": "Invalid sorting field",
        "duplicateApiPath": "Duplicate API path exists",
        "invalidSortFieldV": "Invalid sorting field: %v",
        "fileDeleteFailed": "File deletion failed",
        "menuDeleteFailed": "Failed to delete menu",
        "tableDeleteFailed": "Failed to delete table",
        "rollbackInjectionSuccess": "Rollback injection code succeeded!",
        "fileMoveFailed": "File move failed!",
        "templateCannotBeEmpty": "Template cannot be empty",
        "pageIsFormGenerator": "Page is form generator",
        "packageNameCannotBeEmpty": "Package Name cannot be empty",
        "cannotUseReservedPackageName": "Cannot use reserved package name",
        "duplicatePackageNameExists": "Duplicate Package Name exists",
        "failedToGetAllPackages": "Failed to get all packages"
    },
    "utils": {
        "checkFailZeroValue": "Validation failed, unable to capture zero value",
        "checkFailNameEmpty": "Validation failed, unable to properly check if name is empty",
        "checkFailPass": "Validation failed, unable to pass the check",
        "getHuaweiObjectFailed": "Failed to get Huawei object storage object!",
        "fileUploadFailed": "File upload failed!",
        "getHuaweiObjectFailedDuplicate": "Failed to get Huawei object storage object!",
        "deleteObjectFailed": "Failed to delete object (%s)! Output: %v",

        "fileOpenParseFailed": "[filepath:%s] Failed to open/parse the file!",
        "fileOpenFailed": "[filepath:%s] Failed to open the file!",
        "injectionFailed": "[filepath:%s] Injection failed!",

        "test_gva_user_injection": "Testing GvaUser struct injection",
        "test_gva_user_rollback": "Testing GvaUser rollback",
        "test_user_injection": "Testing &model.User{} injection",
        "test_exa_customer_injection": "Testing new(model.ExaCustomer) injection",
        "test_sys_users_injection": "Testing new(model.SysUsers) injection",
        "test_user_rollback": "Testing &model.User{} rollback",
        "test_exa_customer_rollback": "Testing new(model.ExaCustomer) rollback",
        "cookieRewriteFailed": "Failed to rewrite cookie token, unable to successfully parse the token. Please check if the request header contains x-token and if the claims are in the required structure.",
        "jwtParseFailed": "Failed to retrieve JWT parsing information from Gin's context. Please check if the request header contains x-token and if the claims are in the required structure.",
        "gvaPluginRegister": "Test Gva plugin registration injection",
        "gvaPluginRollback": "Test Gva plugin rollback",
        "initCustomerRouterRollback": "Test InitCustomerRouter rollback",
        "initFileUploadAndDownloadRouterRollback": "Test InitFileUploadAndDownloadRouter rollback",
        "exaFileUploadAndDownloadInjection": "Test injection of &example.ExaFileUploadAndDownload{}",
        "exaCustomerInjection": "Test injection of &example.ExaCustomer{}",
        "newExaFileUploadAndDownloadInjection": "Test injection of new(example.ExaFileUploadAndDownload)",
        "newExaCustomerInjection": "Test injection of new(example.ExaCustomer)",
        "exaFileUploadAndDownloadRollback": "Test rollback of &example.ExaFileUploadAndDownload{}",
        "exaCustomerRollback": "Test rollback of &example.ExaCustomer{}",
        "newExaFileUploadAndDownloadRollback": "Test rollback of new(example.ExaFileUploadAndDownload)",
        "newExaCustomerRollback": "Test rollback of new(example.ExaCustomer)",

        "fileUploadAndDownloadRouterRollback": "Test rollback of FileUploadAndDownloadRouter",
        "fileUploadAndDownloadApiRollback": "Test rollback of FileUploadAndDownloadApi",
        "fileUploadAndDownloadServiceRollback": "Test rollback of FileUploadAndDownloadService",
        "fileUploadAndDownloadRouterInjection": "Test injection of FileUploadAndDownloadRouter",
        "fileUploadAndDownloadApiInjection": "Test injection of FileUploadAndDownloadApi",
        "fileUploadAndDownloadServiceInjection": "Test injection of FileUploadAndDownloadService",

        "exampleApiGroupRollback": "Test rollback of ExampleApiGroup",
        "exampleRouterGroupRollback": "Test rollback of ExampleRouterGroup",
        "exampleServiceGroupRollback": "Test rollback of ExampleServiceGroup",
        "exampleApiGroupInjection": "Test injection of ExampleApiGroup",
        "exampleRouterGroupInjection": "Test injection of ExampleRouterGroup",
        "exampleServiceGroupInjection": "Test injection of ExampleServiceGroup",

        "gvaPluginUserApiInjection": "Test injection of Gva Plugin UserApi",
        "gvaPluginUserRouterInjection": "Test injection of Gva Plugin UserRouter",
        "gvaPluginUserServiceInjection": "Test injection of Gva Plugin UserService",
        "gvaUserInjection": "Test injection of gva User",
        "gvaPluginUserRouterRollback": "Test rollback of Gva Plugin UserRouter",
        "gvaPluginUserApiRollback": "Test rollback of Gva Plugin UserApi",
        "gvaPluginUserServiceRollback": "Test rollback of Gva Plugin UserService",

        "gvaPluginUserInjection": "Test injection of Gva Plugin User",
        "chineseInjection": "Test injection of Chinese",
        "gvaPluginUserRollback": "Test rollback of Gva Plugin User",

        "registrationError": "is already registered and cannot be registered again",
        "valueCannotBeEmpty": "cannot be empty",
        "formatValidationFailed": "format validation failed",
        "lengthOrValueOutOfRange": "length or value is out of valid range",
        "sysNoSupport": "The system does not support",
        "fileNameInvalid": "File name is invalid"
    },
    "router": {

    }
}

