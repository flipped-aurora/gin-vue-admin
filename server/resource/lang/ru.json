{
    "core": {
        "server": {
            "currentVersion": "Текущая версия",
            "welcomeTo": "Добро пожаловать в",
            "joinGroup": "Как присоединиться к группе: WeChat ID: shouzi_1994 QQ group: 470239250. Перевел: Xenon007 (Iaskin Vladislav)",
            "website": "Веб-сайт проекта",
            "pluginMarket": "Рынок плагинов",
            "community": "Сообщество обсуждения GVA",
            "swagger": "Адрес документации по умолчанию для автоматизации",
            "frontend": "Адрес запуска фронтенд-файлов по умолчанию",
            "copyright1": "--------------------------------------Заявление об авторских правах--------------------------------------",
            "copyright2": "** Авторские права: команда открытого исходного кода flipped-aurora **",
            "copyright3": "** Правообладатель: Beijing Flip Aurora Technology Co., Ltd. **",
            "copyright4": "** Для удаления логотипа авторизации необходимо приобрести коммерческую лицензию: https://gin-vue-admin.com/empower/index.html **"
        },
        "viper": {
            "modeGinEnvName": "Вы используете режим gin с именем окружения %s, путь к конфигурации: %s\n",
            "envVariable": "Вы используете переменную окружения %s, путь к конфигурации: %s\n",
            "commandLineParam": "Вы используете значение, переданное через аргумент командной строки -c, путь к конфигурации: %s\n",
            "viperFunc": "Вы используете значение, переданное через функцию Viper(), путь к конфигурации: %s\n"
        }
    },
    "initialize": {
        "projectNotInitialized": "Проект не инициализирован, плагины не могут быть установлены. Перезапустите проект после инициализации для завершения установки плагинов.",
        "registrationStarted": "Регистрация начата",
        "scheduledDatabaseCleanup": "Запланирована очистка базы данных для содержимого [logs, blacklist]",
        "getTableObjectFailed": "Не удалось получить объект таблицы для [%s]!",
        "duplicateIndex": "Индекс [%s] дублируется!",
        "createIndexFailed": "Не удалось создать индекс [%s]!",
        "getIndexObjectFailed": "Не удалось получить объект индекса для [%s]!",
        "getIndexListFailed": "Не удалось получить список индексов для [%s]!",
        "mongoConnectionFailed": "Не удалось подключиться к базе данных MongoDB!"
    },
    "general": {
        "createSuccess": "Создано успешно",
        "creationFail": "Создание не удалось!",
        "creationFailErr": "Создание не удалось",
        "deleteFailErr": "Удаление не удалось",
        "deleteFail": "Удаление не удалось!",
        "deleteSuccess": "Удалено успешно",
        "getDataFail": "Получение данных не удалось!",
        "getDataFailErr": "Получение данных не удалось",
        "getDataSuccess": "Данные получены успешно",
        "modifyFail": "Изменение не удалось!",
        "modifySuccess": "Изменено успешно",
        "queryFail": "Запрос не удался!",
        "queryFailErr": "Запрос не удался",
        "querySuccess": "Запрос выполнен успешно",
        "setupFail": "Настройка не удалась",
        "setupFailErr": "Настройка не удалась!",
        "setupSuccess": "Настройка выполнена успешно",
        "tabelDataInitFail": "Инициализация данных таблицы не удалась!",
        "updateFail": "Обновление не удалось!",
        "updateFailErr": "Обновление не удалось",
        "updateSuccess": "Обновлено успешно",
        "invalidPackageName": "Недопустимое имя пакета",
        "insufficientPermissions": "Недостаточно прав",
        "sendFailed": "Отправка не удалась",
        "sendSuccess": "Отправлено успешно"
    },
    "init": {
        "dbAlreadyExist": "Конфигурация базы данных уже существует!!",
        "dbAlreadyInit": "База данных уже инициализирована!",
        "initDB": "Перейти к инициализации базы данных"
    },
    "model": {
        "common": {
            "response": {
                "operationFail": "Операция не удалась.",
                "operationSuccess":"Операция выполнена успешно.",
                "success": "Успех"
            }
        }
    },
    "sys_authority": {
        "copyFail": "Копирование не удалось!",
        "copyFailErr": "Копирование не удалось",
        "copySuccess": "Скопировано успешно",
        "assignmentFail": "Назначение не удалось",
        "assignmentSuccess": "Назначение выполнено успешно"
    },
    "sys_auto_code": {
        "autoCreateFail": "Автоматическое создание не удалось! Пожалуйста, очистите ненужные данные самостоятельно!",
        "largeModelCreationFail": "Создание крупной модели не удалось!",
        "largeModelCreationFailErr": "Создание крупной модели не удалось",
        "previewFail": "Предпросмотр не удался!",
        "previewFailErr": "Предпросмотр не удался",
        "previewSuccess": "Предпросмотр выполнен успешно",
        "queryTablesFail": "Не удалось запросить таблицы",
        "webPluginInstallSuccess": "Установка веб-плагина выполнена успешно",
        "serverPluginInstallSuccess": "Установка серверного плагина выполнена успешно",
        "webPluginInstallFail": "Не удалось установить веб-плагин, пожалуйста, распакуйте и установите согласно документации. Если это плагин только для бэкенда, игнорируйте это сообщение.",
        "serverPluginInstallFail": "Не удалось установить серверный плагин, пожалуйста, распакуйте и установите согласно документации. Если это плагин только для фронтенда, игнорируйте это сообщение.",
        "packagingFail": "Упаковка не удалась",
        "createInitMenuFail": "Не удалось создать начальное меню",
        "fileChangeSuccess": "Изменение файла выполнено успешно",
        "createInitApiFail": "Не удалось создать начальный API",
        "packagingSuccess": "Упаковка выполнена успешно, путь к файлу: %s",
        "injectFail": "Инъекция не удалась",
        "injectSuccess": "Инъекция выполнена успешно",
        "templateFileReadFailed": "[filepath:%s] Не удалось прочитать файл шаблона!",
        "directoryCreationFailed": "[filepath:%s] Не удалось создать директорию!",
        "generationFailed": "[filepath:%s] Генерация не удалась!",
        "generationSuccess": "[template:%s][filepath:%s] Генерация выполнена успешно!",
        "injection_success": "[type:%s] Инъекция выполнена успешно!\n",
        "templateFolderReadFailed": "Не удалось прочитать папку шаблонов!",
        "illegalTemplateFile": "[filepath:%s] Недопустимый файл шаблона!",
        "illegalTemplateDirectory": "[filepath:%s] Недопустимая директория шаблона!",
        "illegalTemplateSuffix": "[filepath:%s] Недопустимый суффикс шаблона!",
        "templateFolderReadFailedWithDir": "Не удалось прочитать папку шаблонов [%s]!",
        "testPackage": "Тестовый пакет",
        "testPlugin": "Тестовый плагин",
        "description": "Описание",
        "displayName": "Отображаемое имя",
        "keywordNotice": "%s является ключевым словом Go!",

        "nonStandardPlugin": "Нестандартный плагин, пожалуйста, выполните автоматическую миграцию согласно документации",
        "autoPathExists": "В autoPath уже существует плагин с таким же именем, пожалуйста, установите его вручную",
        "duplicatePlugin": "Плагин с таким же именем уже существует, пожалуйста, установите его вручную",
        "pluginNameRequired": "Имя плагина не может быть пустым",
        "webPathNotExist": "Веб-путь не существует",
        "serverPathNotExist": "Серверный путь не существует",

        "duplicateRoleId": "Существует дублирующийся ID роли",
        "queryRoleDataFailed": "Не удалось запросить данные роли",
        "roleNotExist": "Эта роль не существует",
        "roleInUse": "Эта роль используется пользователями и не может быть удалена",
        "roleHasSubRoles": "Эта роль имеет подроли и не может быть удалена",
        "invalidRoleId": "Переданный ID роли недействителен",

        "buttonInUse": "Эта кнопка используется и не может быть удалена",
        "menuHasSubMenu": "Это меню имеет подменю и не может быть удалено",
        "recordNotFound": "Запись не существует",
        "menuUsedAsHome": "Это меню используется ролями в качестве домашней страницы и не может быть удалено",
        "duplicateNameUpdateFailed": "Обновление не удалось из-за дублирования имени",
        "adaptDatabaseFailed": "Адаптация базы данных не удалась, проверьте, использует ли таблица casbin движок InnoDB!",
        "stringLoadModelFailed": "Не удалось загрузить строковую модель",
        "noAvailableInit": "Нет доступного процесса инициализации, проверьте, завершена ли инициализация."
    },
    "sys_auto_code_history": {
        "rollbackSuccess": "Откат выполнен успешно"
    },
    "sys_captcha": {
        "vCodeFail": "Получение кода верификации не удалось!",
        "vCodeFailErr": "Получение кода верификации не удалось",
        "vCodeSuccess": "Код верификации получен успешно"
    },
    "sys_initdb": {
        "autoCreateDBFail": "Автоматическое создание базы данных не удалось!",
        "autoCreateDBFailErr": "Автоматическое создание базы данных не удалось, проверьте фоновый лог и выполните инициализацию после проверки",
        "autoCreateDBSuccess": "База данных создана автоматически успешно",
        "paramVerifyFail": "Проверка параметров не удалась!",
        "paramVerifyFailErr": "Проверка параметров не удалась"
    },
    "sys_jwt_blacklist": {
        "jwtInvalidatedSuccess": "JWT успешно аннулирован",
        "jwtInvalidationFailedErr": "Аннулирование JWT не удалось"
    },
    "sys_menu": {
        "addFail": "Добавление не удалось!",
        "addFailErr": "Добавление не удалось",
        "addSuccess": "Добавлено успешно"
    },
    "sys_operation_record": {
        "batchDeleteFail": "Пакетное удаление не удалось!",
        "batchDeleteFailErr": "Пакетное удаление не удалось",
        "batchDeleteSuccess": "Пакетное удаление выполнено успешно"
    },
    "sys_system": {
        "rebootFail": "Перезапуск системы не удался!",
        "rebootFailErr": "Перезапуск системы не удался",
        "rebootSuccess": "Система перезапущена успешно"
    },
    "sys_user": {
        "changePWErr": "Изменение не удалось, исходный пароль не соответствует текущему аккаунту",
        "deleteUserFail": "Удаление пользователя не удалось",
        "getTokenErr": "Не удалось получить токен",
        "getTokenFail": "Не удалось получить токен!",
        "jwtInvalidationFailed": "Аннулирование JWT не удалось!",
        "loginFail": "Вход не удался! Имя пользователя не существует или пароль неверный!",
        "loginStatusFail": "Не удалось установить статус входа!",
        "loginStatusFailErr": "Не удалось установить статус входа",
        "loginSuccess": "Вход выполнен успешно",
        "registrationFail": "Регистрация не удалась!",
        "registrationFailErr": "Регистрация не удалась",
        "registrationSuccess": "Регистрация выполнена успешно",
        "resetPWFail": "Сброс пароля не удался!",
        "resetPWFailErr": "Сброс пароля не удался",
        "resetPWSuccess": "Пароль успешно сброшен",
        "userNameOrPasswordError": "Имя пользователя не существует или пароль неверный",
        "vCodeErr": "Ошибка кода верификации",
        "loginFailUserBanned": "Вход не удался! Пользователь заблокирован для входа!",
        "userBanned": "Пользователь заблокирован для входа",
        "usernameRegistered": "Имя пользователя уже зарегистрировано",
        "passwordError": "Неверный пароль",
        "originalPasswordError": "Исходный пароль неверный",
        "userHasNoRole": "У пользователя нет этой роли",
        "defaultRouteNotFound": "Маршрут по умолчанию не найден, невозможно переключиться на эту роль",
        "queryUserDataFailed": "Не удалось запросить данные пользователя",
        "userNotExist": "Пользователь не существует"
    },
    "system": {
        "api": {
            "desc": {
                "addMenu": "Добавить меню",
                "addMenuRole": "Добавить ассоциацию меню и роли",
                "addTemplateMethod": "Добавить метод шаблона",
                "autoCode": "Автоматизация кода",
                "batchDeleteAnnouncement": "Пакетное удаление объявлений",
                "batchDeleteExportTemplate": "Пакетное удаление шаблонов экспорта",
                "batchDeleteOperationHistory": "Пакетное удаление истории операций",
                "breakpointContinue": "Продолжение с точки останова",
                "breakpointContinueFinish": "Продолжение с точки останова завершено",
                "changePassword": "Изменить пароль (рекомендуется)",
                "changeRoleAPIPermission": "Изменить права доступа к API для роли",
                "configurationTemplates": "Шаблон конфигурации",
                "confirmSyncApi": "Подтвердить синхронизацию API",
                "copyRole": "Копировать роль",
                "createAPI": "Создать API",
                "createCustomer": "Создать клиента",
                "createDictionary": "Создать словарь",
                "createDictionaryContent": "Создать содержимое словаря",
                "createExportTemplate": "Создать шаблон экспорта",
                "createOperationRecord": "Создать запись операции",
                "createPluginPackage": "Создать пакет плагина",
                "createRole": "Создать роль",
                "deleteAPI": "Удалить API",
                "deleteAPIByID": "Пакетное удаление API",
                "deleteAnnouncement": "Удалить объявление",
                "deleteButton": "Удалить кнопку",
                "deleteCustomer": "Удалить клиента",
                "deleteDictionary": "Удалить словарь",
                "deleteDictionaryContent": "Удалить содержимое словаря",
                "deleteExportTemplate": "Удалить шаблон экспорта",
                "deleteFile": "Удалить файл",
                "deleteMenu": "Удалить меню",
                "deleteOperationRecord": "Удалить запись операции",
                "deleteRole": "Удалить роль",
                "deleteRollbackRecord": "Удалить запись отката",
                "deleteTemplate": "Удалить шаблон",
                "deleteUsers": "Удалить пользователей",
                "downloadTemplate": "Скачать шаблон",
                "editFileNameOrRemark": "Редактировать имя файла или примечание",
                "exportExcel": "Экспортировать в Excel",
                "fileIntegrityCheck": "Проверка целостности файла",
                "fileUploadExample": "Пример загрузки файла",
                "findTargetFile": "Найти целевой файл (второй проход)",
                "getAPIByID": "Получить детали API",
                "getAPIList": "Получить список API",
                "getAllAPI": "Получить все API",
                "getAllDatabases": "Получить все базы данных",
                "getAllTemplates": "Получить все шаблоны",
                "getAnnouncementByID": "Получить объявления по ID",
                "getAnnouncementList": "Получить список объявлений",
                "getConfigFileContent": "Получить содержимое файла конфигурации",
                "getCustomerList": "Получить список клиентов",
                "getDatabaseTables": "Получить таблицы базы данных",
                "getDictionaryById": "Получить словарь по ID",
                "getDictionaryContentById": "Получить содержимое словаря по ID",
                "getDictionaryContentList": "Получить список содержимого словаря",
                "getDictionaryList": "Получить список словарей",
                "getDynamicRoute": "Получить динамический маршрут пользователя",
                "getExistingButtonPermission": "Получить существующие разрешения кнопки",
                "getExportTemplateById": "Получить шаблон экспорта по ID",
                "getExportTemplateList": "Получить список шаблонов экспорта",
                "getMenuByID": "Получить меню по ID",
                "getMenuList": "Получить список меню",
                "getMenuRole": "Получить меню указанной роли",
                "getMenuTree": "Получить дерево меню (обязательно)",
                "getMetaInfo": "Получить мета-информацию",
                "getOperationRecordById": "Получить запись операции по ID",
                "getOperationRecordList": "Получить список записей операций",
                "getPermissionList": "Получить список разрешений",
                "getRoleList": "Получить список ролей",
                "getRouteGroup": "Получить группу маршрутов",
                "getSelectedTableFields": "Получить все поля выбранной таблицы",
                "getSelfInfo": "Получить информацию о себе (обязательно)",
                "getServerInfo": "Получить информацию о сервере",
                "getSingleCustomer": "Получить одного клиента",
                "getSyncApi": "Получить синхронизированный API",
                "getTemplateFile": "Получить файл шаблона",
                "getUploadFileList": "Получить список загруженных файлов",
                "getUsersList": "Получить список пользователей",
                "ignoreApi": "Игнорировать API",
                "importExcel": "Импортировать Excel",
                "installPlugin": "Установить плагин",
                "jwtAddedToBlackList": "JWT добавлен в черный список (требуется выход)",
                "mergeFileAfterUpload": "Объединить файл после загрузки",
                "modifyUserRole": "Изменить роль пользователя (обязательно)",
                "newAnnouncement": "Новое объявление",
                "packagePlugin": "Упаковать плагин",
                "pluginVersionResumableUpload": "Возобновляемая загрузка версии плагина",
                "previewAutoCode": "Предпросмотр автоматического кода",
                "queryRollbackRecord": "Запросить запись отката",
                "removeFileAfterUpload": "Удалить файл после загрузки",
                "resetUserPassword": "Сбросить пароль пользователя",
                "resetUserWeb": "Конфигурация пользовательского интерфейса",
                "rollbackAutoGeneratedCode": "Откатить автоматически сгенерированный код",
                "sendEmail": "Отправить электронное письмо",
                "sendTestEmail": "Отправить тестовое электронное письмо",
                "setButtonPermission": "Установить разрешение кнопки",
                "setConfigFileContent": "Установить содержимое файла конфигурации",
                "setPermissionGroup": "Установить группу разрешений",
                "setRolePermissions": "Установить разрешения ресурсов для роли",
                "setSelfInfo": "Установить информацию о себе (обязательно)",
                "setUserInfo": "Установить информацию о пользователе",
                "updateAPI": "Обновить API",
                "updateAnnouncement": "Обновить объявление",
                "updateCustomer": "Обновить клиента",
                "updateDictionary": "Обновить словарь",
                "updateDictionaryContent": "Обновить содержимое словаря",
                "updateExportTemplate": "Обновить шаблон экспорта",
                "updateMenu": "Обновить меню",
                "updateRole": "Обновить роль",
                "userLoginRequired": "Вход пользователя (обязательно)",
                "userRegistration": "Регистрация пользователя",
                "tableDataInitFail": "Инициализация данных таблицы не удалась",
                "newParameter": "Новый параметр",
                "deleteParameter": "Удалить параметр",
                "batchDeleteParameters": "Пакетное удаление параметров",
                "updateParameters": "Обновить параметры",
                "getParametersById": "Получить параметры по ID",
                "getParametersList": "Получить список параметров",
                "categoryList": "Список категорий",
                "addEditCategory": "Добавить/редактировать категорию",
                "deleteCategory": "Удалить категорию"
            },
            "group": {
                "announcement": "Объявления",
                "api": "API",
                "buttonAuthority": "Авторизация кнопки",
                "casbin": "Casbin",
                "codeGen": "Генератор кода",
                "codeGenHistory": "Журнал генератора кода",
                "customer": "Клиент",
                "dictDetails": "Детали системного словаря",
                "dictionary": "Системный словарь",
                "email": "Электронная почта",
                "fileUploadDownload": "Загрузка и скачивание файлов",
                "menu": "Меню",
                "optRecord": "Запись операций",
                "partialUpload": "Частичная загрузка",
                "resumeUpload": "Возобновляемая загрузка (версия плагина)",
                "role": "Роль",
                "systemService": "Системная служба",
                "systemUser": "Системный пользователь",
                "tableTemplate": "Шаблоны таблиц",
                "templateConfiguration": "Конфигурация шаблонов",
                "parameterManagement": "Управление параметрами",
                "mediaLibraryCategories": "Категории медиа-библиотеки"
            }
        },
        "authority": {
            "normalUserSubRole": "Подроль обычного пользователя",
            "normalUsers": "Обычные пользователи",
            "permissionRefreshFailed": "Создано успешно, обновление разрешений не удалось.",
            "testRole": "Тестовая роль"
        },
        "dictionary": {
            "boolType": "Булев тип",
            "floatType": "Тип с плавающей точкой",
            "gender": "Тип пола",
            "genderDict": "Словарь пола",
            "intType": "Целочисленный тип",
            "intTypeDict": "Тип базы данных, соответствующий целочисленному типу",
            "stringType": "Строковый тип",
            "timeDateType": "Тип даты и времени",
            "timeDateTypeDict": "Тип даты и времени базы данных"
        },
        "dictionary_detail": {
            "female": "Женский",
            "male": "Мужской"
        },
        "menu": {
            "about": "О нас",
            "adminTools": "Инструменты администрирования",
            "announcementManage": "Управление объявлениями [Пример]",
            "aiPageDraw": "AI Рисование страницы",
            "mcpToolsTemplate": "Шаблон инструментов MCP",
            "mcpToolsTest": "Тест инструментов MCP",
            "apiManage": "Управление API",
            "autoCode": "Генератор кода",
            "autoCodeEdit": "Автоматизация кода (повторное использование)",
            "autoCodeManage": "Управление автоматизированным кодом",
            "breakPoint": "Загрузка больших файлов",
            "customerList": "Список клиентов (пример ресурса)",
            "dashboard": "Панель управления",
            "dataTableInitFail": "Не удалось инициализировать данные таблицы",
            "dictDetail": "Детали словаря",
            "dictManage": "Управление словарем",
            "emailPlugin": "Плагин электронной почты",
            "examples": "Примеры",
            "excelImportExport": "Импорт и экспорт Excel",
            "formCreator": "Конструктор форм",
            "mediaLibUpDown": "Медиа-библиотека (загрузка и скачивание)",
            "menuManage": "Управление меню",
            "operationLog": "Журнал аудита",
            "packagePlugin": "Упаковка плагина",
            "personalInfo": "Личная информация",
            "pluginInstall": "Установка плагина",
            "pluginMarket": "Рынок плагинов",
            "pluginSystem": "Система плагинов",
            "resumableUpload": "Возобновляемая загрузка (версия плагина)",
            "resume": "Возобновление с точки останова (версия плагина)",
            "roleManage": "Управление ролями",
            "serverStatus": "Статус сервера",
            "system": "Конфигурация системы",
            "systemTools": "Системные инструменты",
            "tableTemplate": "Шаблон таблицы",
            "templateConfig": "Конфигурация шаблонов",
            "userManage": "Управление пользователями",
            "website": "Официальный веб-сайт",
            "buttonKey": "Ключ кнопки",
            "buttonComment": "Комментарий к кнопке",
            "menuID": "ID меню",
            "parameterManagement": "Управление параметрами"
        }
    },
    "announcement": {
        "publicAnnouncementAPI": "Информация об API объявлений, не требующая аутентификации",
        "initConfigFailed": "Не удалось инициализировать файл конфигурации",
        "announcementManagement": "Управление объявлениями",
        "registryFailed": "Регистрация не удалась"
    },
    "sys_api": {
        "syncFail": "Синхронизация не удалась",
        "ignoreFail": "Игнорирование не удалось",
        "refreshFail": "Обновление не удалось",
        "refreshSuccess": "Обновление выполнено успешно"
    },
    "api": {
        "example": {
            "exa_breakpoint_continue": {
                "fileFail": "Загрузка файла не удалась",
                "fileReadFail": "Чтение файла не удалось",
                "checkMD5Fail": "Проверка MD5 не удалась",
                "findOrCreateRecordFail": "Не удалось найти или создать запись",
                "resumeFromBreakpointFail": "Возобновление с точки останова не удалось",
                "createFileRecordFail": "Не удалось создать запись файла",
                "sliceCreationSuccess": "Создание среза выполнено успешно",
                "searchFail": "Поиск не удался",
                "searchSuccess": "Поиск выполнен успешно",
                "fileCreationFail": "Создание файла не удалось",
                "fileCreationSuccess": "Создание файла выполнено успешно",
                "cacheSliceDeleteFail": "Не удалось удалить кэш-срез",
                "cacheSliceDeleteSuccess": "Удаление кэш-среза выполнено успешно"
            }
        }
    },
    "service": {
        "duplicateApi": "Существует дублирующийся API",
        "invalidSortField": "Недопустимое поле сортировки",
        "duplicateApiPath": "Существует дублирующийся путь API",
        "invalidSortFieldV": "Недопустимое поле сортировки: %v",
        "fileDeleteFailed": "Удаление файла не удалось",
        "menuDeleteFailed": "Удаление меню не удалось",
        "tableDeleteFailed": "Удаление таблицы не удалось",
        "rollbackInjectionSuccess": "Откат инъекционного кода выполнен успешно!",
        "fileMoveFailed": "Перемещение файла не удалось!",
        "templateCannotBeEmpty": "Шаблон не может быть пустым",
        "pageIsFormGenerator": "Страница является генератором форм",
        "packageNameCannotBeEmpty": "Имя пакета не может быть пустым",
        "cannotUseReservedPackageName": "Нельзя использовать зарезервированное имя пакета",
        "duplicatePackageNameExists": "Существует дублирующееся имя пакета",
        "failedToGetAllPackages": "Не удалось получить все пакеты"
    },
    "utils": {
        "checkFailZeroValue": "Проверка не удалась, невозможно захватить нулевое значение",
        "checkFailNameEmpty": "Проверка не удалась, невозможно корректно проверить, пустое ли имя",
        "checkFailPass": "Проверка не удалась, невозможно пройти проверку",
        "getHuaweiObjectFailed": "Не удалось получить объект хранилища Huawei!",
        "fileUploadFailed": "Загрузка файла не удалась!",
        "getHuaweiObjectFailedDuplicate": "Не удалось получить объект хранилища Huawei!",
        "deleteObjectFailed": "Не удалось удалить объект (%s)! Вывод: %v",

        "fileOpenParseFailed": "[filepath:%s] Не удалось открыть/разобрать файл!",
        "fileOpenFailed": "[filepath:%s] Не удалось открыть файл!",
        "injectionFailed": "[filepath:%s] Инъекция не удалась!",

        "test_gva_user_injection": "Тестирование инъекции структуры GvaUser",
        "test_gva_user_rollback": "Тестирование отката GvaUser",
        "test_user_injection": "Тестирование инъекции &model.User{}",
        "test_exa_customer_injection": "Тестирование инъекции new(model.ExaCustomer)",
        "test_sys_users_injection": "Тестирование инъекции new(model.SysUsers)",
        "test_user_rollback": "Тестирование отката &model.User{}",
        "test_exa_customer_rollback": "Тестирование отката new(model.ExaCustomer)",
        "cookieRewriteFailed": "Не удалось переписать токен cookie, невозможно успешно разобрать токен. Проверьте, содержит ли заголовок запроса x-token и соответствуют ли claims требуемой структуре.",
        "jwtParseFailed": "Не удалось получить информацию о разборе JWT из контекста Gin. Проверьте, содержит ли заголовок запроса x-token и соответствуют ли claims требуемой структуре.",
        "gvaPluginRegister": "Тестирование инъекции регистрации плагина Gva",
        "gvaPluginRollback": "Тестирование отката плагина Gva",
        "initCustomerRouterRollback": "Тестирование отката InitCustomerRouter",
        "initFileUploadAndDownloadRouterRollback": "Тестирование отката InitFileUploadAndDownloadRouter",
        "exaFileUploadAndDownloadInjection": "Тестирование инъекции &example.ExaFileUploadAndDownload{}",
        "exaCustomerInjection": "Тестирование инъекции &example.ExaCustomer{}",
        "newExaFileUploadAndDownloadInjection": "Тестирование инъекции new(example.ExaFileUploadAndDownload)",
        "newExaCustomerInjection": "Тестирование инъекции new(example.ExaCustomer)",
        "exaFileUploadAndDownloadRollback": "Тестирование отката &example.ExaFileUploadAndDownload{}",
        "exaCustomerRollback": "Тестирование отката &example.ExaCustomer{}",
        "newExaFileUploadAndDownloadRollback": "Тестирование отката new(example.ExaFileUploadAndDownload)",
        "newExaCustomerRollback": "Тестирование отката new(example.ExaCustomer)",

        "fileUploadAndDownloadRouterRollback": "Тестирование отката FileUploadAndDownloadRouter",
        "fileUploadAndDownloadApiRollback": "Тестирование отката FileUploadAndDownloadApi",
        "fileUploadAndDownloadServiceRollback": "Тестирование отката FileUploadAndDownloadService",
        "fileUploadAndDownloadRouterInjection": "Тестирование инъекции FileUploadAndDownloadRouter",
        "fileUploadAndDownloadApiInjection": "Тестирование инъекции FileUploadAndDownloadApi",
        "fileUploadAndDownloadServiceInjection": "Тестирование инъекции FileUploadAndDownloadService",

        "exampleApiGroupRollback": "Тестирование отката ExampleApiGroup",
        "exampleRouterGroupRollback": "Тестирование отката ExampleRouterGroup",
        "exampleServiceGroupRollback": "Тестирование отката ExampleServiceGroup",
        "exampleApiGroupInjection": "Тестирование инъекции ExampleApiGroup",
        "exampleRouterGroupInjection": "Тестирование инъекции ExampleRouterGroup",
        "exampleServiceGroupInjection": "Тестирование инъекции ExampleServiceGroup",

        "gvaPluginUserApiInjection": "Тестирование инъекции Gva Plugin UserApi",
        "gvaPluginUserRouterInjection": "Тестирование инъекции Gva Plugin UserRouter",
        "gvaPluginUserServiceInjection": "Тестирование инъекции Gva Plugin UserService",
        "gvaUserInjection": "Тестирование инъекции gva User",
        "gvaPluginUserRouterRollback": "Тестирование отката Gva Plugin UserRouter",
        "gvaPluginUserApiRollback": "Тестирование отката Gva Plugin UserApi",
        "gvaPluginUserServiceRollback": "Тестирование отката Gva Plugin UserService",

        "gvaPluginUserInjection": "Тестирование инъекции Gva Plugin User",
        "chineseInjection": "Тестирование инъекции на китайском",
        "gvaPluginUserRollback": "Тестирование отката Gva Plugin User",

        "registrationError": "уже зарегистрирован и не может быть зарегистрирован повторно",
        "valueCannotBeEmpty": "не может быть пустым",
        "formatValidationFailed": "проверка формата не удалась",
        "lengthOrValueOutOfRange": "длина или значение вне допустимого диапазона",
        "sysNoSupport": "Система не поддерживает",
        "fileNameInvalid": "Имя файла недействительно"
    },
    "router": {},
    "directory": {
        "fileExists": "Файл с таким именем существует"
    },
    "upload": {
        "fileNotExists": "Файл не существует",
        "readFileFailed": "Не удалось прочитать файл"
    },
    "jwt": {
        "unknownError": "Неизвестная ошибка",
        "tokenExpired": "Срок действия токена истек",
        "tokenNotValidYet": "Токен еще не активен",
        "tokenMalformed": "Это не токен",
        "invalidSignature": "Недействительная подпись",
        "tokenInvalid": "Невозможно обработать этот токен"
    },
    "breakpoint": {
        "invalidFileNameOrPath": "Недействительное имя файла или путь"
    },
    "dictionary": {
        "duplicateTypeNotAllowed": "Существует дублирующийся тип, создание не разрешено",
        "doNotCauseTrouble": "Пожалуйста, не создавайте проблем",
        "queryDictDataFailed": "Не удалось запросить данные словаря"
    },
    "category": {
        "nameAlreadyExists": "Имя категории уже существует",
        "deleteChildrenFirst": "Пожалуйста, сначала удалите дочерние элементы"
    }
}
